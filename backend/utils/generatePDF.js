const PDFDocument = require('pdfkit');
const fs = require('fs');
const path = require('path');

const generateCircularPDF = async (data, outputPath) => {
  return new Promise((resolve, reject) => {
    try {
      const doc = new PDFDocument();

      // Create write stream for the PDF file
      const stream = fs.createWriteStream(outputPath);
      doc.pipe(stream);

      // Header
      doc.fontSize(20).text('Official Circular', { align: 'center' });
      doc.moveDown();

      // Circular Details
      doc.fontSize(12);
      doc.text(`Title: ${data.title}`);
      doc.text(`Type: ${data.type}`);
      doc.text(`Issued By: ${data.issuedByName || 'N/A'}`);
      doc.text(`Department: ${data.department}`);
      doc.text(`Issue Date: ${data.issueDate}`);
      doc.text(`Receive Date: ${data.receiveDate || 'N/A'}`);
      doc.text(`Reference ID: ${data.referenceId}`);
      doc.text(`Target Audience: ${data.targetAudience.join(', ')}`);
      doc.moveDown();

      // Body content (if any)
      if (data.content) {
        doc.fontSize(14).text('Content:', { underline: true });
        doc.fontSize(12).text(data.content);
      }

      // Footer
      doc.moveDown(2);
      doc.fontSize(10).text('Generated by Circular Management System', { align: 'center' });

      doc.end();

      stream.on('finish', () => resolve(outputPath));
      stream.on('error', reject);
    } catch (err) {
      reject(err);
    }
  });
};

module.exports = generateCircularPDF;
